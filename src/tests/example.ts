import { DRGTestSuite } from "./index";
import { getConfigForSituacao, getConfigForScenario } from "./config";

/**
 * Exemplo de uso do DRG Test Suite
 * Este arquivo demonstra como usar o sistema de testes em diferentes cen√°rios
 */

// Exemplo 1: Execu√ß√£o b√°sica de todos os testes
export async function exemploBasico() {
  console.log("üß™ Exemplo 1: Execu√ß√£o b√°sica de todos os testes");

  const testSuite = new DRGTestSuite();
  await testSuite.initialize();

  // Executa todos os testes
  await testSuite.runAllTests();

  // Gera e exibe relat√≥rio
  await testSuite.generateAndDisplayReport();

  console.log("‚úÖ Exemplo 1 conclu√≠do!");
}

// Exemplo 2: Execu√ß√£o apenas de valida√ß√µes
export async function exemploValidacao() {
  console.log("üîç Exemplo 2: Execu√ß√£o apenas de valida√ß√µes");

  const testSuite = new DRGTestSuite();
  await testSuite.initialize();

  // Executa apenas valida√ß√µes
  await testSuite.runValidationOnly();

  console.log("‚úÖ Exemplo 2 conclu√≠do!");
}

// Exemplo 3: Execu√ß√£o com envio para DRG
export async function exemploComEnvio() {
  console.log("üì§ Exemplo 3: Execu√ß√£o com envio para DRG");

  const testSuite = new DRGTestSuite();
  await testSuite.initialize();

  // Executa testes com envio real para DRG
  await testSuite.runTestsWithDRGSend();

  // Gera relat√≥rio
  await testSuite.generateAndDisplayReport();

  console.log("‚úÖ Exemplo 3 conclu√≠do!");
}

// Exemplo 4: Execu√ß√£o para situa√ß√£o espec√≠fica
export async function exemploSituacaoEspecifica() {
  console.log("üè• Exemplo 4: Execu√ß√£o para situa√ß√£o espec√≠fica");

  const testSuite = new DRGTestSuite();
  await testSuite.initialize();

  // Executa apenas testes de Admissional (situa√ß√£o 1)
  await testSuite.runTestsForSituacao(1);

  // Gera relat√≥rio
  await testSuite.generateAndDisplayReport();

  console.log("‚úÖ Exemplo 4 conclu√≠do!");
}

// Exemplo 5: Execu√ß√£o de cen√°rio espec√≠fico
export async function exemploCenarioEspecifico() {
  console.log("üìã Exemplo 5: Execu√ß√£o de cen√°rio espec√≠fico");

  const testSuite = new DRGTestSuite();
  await testSuite.initialize();

  // Executa apenas o cen√°rio "Admissional B√°sica" (situa√ß√£o 1, cen√°rio 1)
  await testSuite.runSpecificScenario(1, 1);

  // Gera relat√≥rio
  await testSuite.generateAndDisplayReport();

  console.log("‚úÖ Exemplo 5 conclu√≠do!");
}

// Exemplo 6: Execu√ß√£o com configura√ß√£o personalizada
export async function exemploConfiguracaoPersonalizada() {
  console.log("‚öôÔ∏è Exemplo 6: Execu√ß√£o com configura√ß√£o personalizada");

  const testSuite = new DRGTestSuite();
  await testSuite.initialize();

  // Obt√©m configura√ß√£o para situa√ß√£o espec√≠fica
  const config = getConfigForSituacao(1);
  console.log("Configura√ß√£o para Admissional:", config);

  // Obt√©m configura√ß√£o para cen√°rio espec√≠fico
  const scenarioConfig = getConfigForScenario(1, 1);
  console.log("Configura√ß√£o para Admissional B√°sica:", scenarioConfig);

  // Executa testes com configura√ß√£o personalizada
  await testSuite.runTestsForSituacao(1);

  console.log("‚úÖ Exemplo 6 conclu√≠do!");
}

// Exemplo 7: Execu√ß√£o e an√°lise de resultados
export async function exemploAnaliseResultados() {
  console.log("üìä Exemplo 7: Execu√ß√£o e an√°lise de resultados");

  const testSuite = new DRGTestSuite();
  await testSuite.initialize();

  // Executa todos os testes
  await testSuite.runAllTests();

  // Obt√©m estat√≠sticas detalhadas
  const reporter = testSuite.getReporter();
  const stats = reporter.getDetailedStats();

  console.log("üìà Estat√≠sticas detalhadas:");
  console.log(`  Total de testes: ${(stats as any).total}`);
  console.log(`  Sucessos: ${(stats as any).successful}`);
  console.log(`  Falhas: ${(stats as any).failed}`);
  console.log(`  Taxa de sucesso: ${(stats as any).successRate.toFixed(2)}%`);
  console.log(`  Tempo m√©dio: ${(stats as any).avgExecutionTime.toFixed(2)}ms`);

  // Estat√≠sticas por situa√ß√£o
  console.log("\nüìã Por situa√ß√£o:");
  Object.entries((stats as any).bySituacao).forEach(
    ([situacao, data]: [string, any]) => {
      console.log(
        `  Situa√ß√£o ${situacao}: ${data.total} testes, ${data.successRate.toFixed(2)}% sucesso`
      );
    }
  );

  // Gera relat√≥rio
  await testSuite.generateAndDisplayReport();

  console.log("‚úÖ Exemplo 7 conclu√≠do!");
}

// Exemplo 8: Execu√ß√£o e limpeza
export async function exemploExecucaoELimpeza() {
  console.log("üßπ Exemplo 8: Execu√ß√£o e limpeza");

  const testSuite = new DRGTestSuite();
  await testSuite.initialize();

  // Executa testes
  await testSuite.runAllTests();

  // Gera relat√≥rio
  await testSuite.generateAndDisplayReport();

  // Limpa dados de teste antigos
  await testSuite.cleanupTestData();

  console.log("‚úÖ Exemplo 8 conclu√≠do!");
}

// Exemplo 9: Listagem de cen√°rios
export async function exemploListagemCenarios() {
  console.log("üìã Exemplo 9: Listagem de cen√°rios");

  const testSuite = new DRGTestSuite();
  await testSuite.initialize();

  // Lista todos os cen√°rios dispon√≠veis
  testSuite.listAllScenarios();

  console.log("‚úÖ Exemplo 9 conclu√≠do!");
}

// Exemplo 10: Execu√ß√£o completa com tratamento de erros
export async function exemploExecucaoCompleta() {
  console.log("üöÄ Exemplo 10: Execu√ß√£o completa com tratamento de erros");

  try {
    const testSuite = new DRGTestSuite();
    await testSuite.initialize();

    // Executa todos os testes
    await testSuite.runAllTests();

    // Gera relat√≥rio
    await testSuite.generateAndDisplayReport();

    // Limpa dados antigos
    await testSuite.cleanupTestData();

    console.log("‚úÖ Exemplo 10 conclu√≠do com sucesso!");
  } catch (error) {
    console.error("‚ùå Erro durante execu√ß√£o:", error);

    // Tenta limpar dados mesmo em caso de erro
    try {
      const testSuite = new DRGTestSuite();
      await testSuite.initialize();
      await testSuite.cleanupTestData();
      console.log("üßπ Limpeza de dados conclu√≠da ap√≥s erro");
    } catch (cleanupError) {
      console.error("‚ùå Erro durante limpeza:", cleanupError);
    }
  }
}

// Fun√ß√£o principal para executar todos os exemplos
export async function executarTodosExemplos() {
  console.log("üéØ Executando todos os exemplos do DRG Test Suite\n");

  const exemplos = [
    exemploBasico,
    exemploValidacao,
    exemploComEnvio,
    exemploSituacaoEspecifica,
    exemploCenarioEspecifico,
    exemploConfiguracaoPersonalizada,
    exemploAnaliseResultados,
    exemploExecucaoELimpeza,
    exemploListagemCenarios,
    exemploExecucaoCompleta,
  ];

  for (let i = 0; i < exemplos.length; i++) {
    try {
      console.log(`\n${"=".repeat(50)}`);
      console.log(`Executando exemplo ${i + 1}/${exemplos.length}`);
      console.log(`${"=".repeat(50)}\n`);

      await exemplos[i]();

      console.log(`\n‚úÖ Exemplo ${i + 1} executado com sucesso!`);
    } catch (error) {
      console.error(`\n‚ùå Erro no exemplo ${i + 1}:`, error);
    }

    // Pausa entre exemplos
    if (i < exemplos.length - 1) {
      console.log("\n‚è≥ Aguardando 2 segundos antes do pr√≥ximo exemplo...");
      await new Promise((resolve) => setTimeout(resolve, 2000));
    }
  }

  console.log("\nüéâ Todos os exemplos foram executados!");
}

// Execu√ß√£o direta se o arquivo for chamado diretamente
if (require.main === module) {
  executarTodosExemplos().catch(console.error);
}
